@using Core.DTO.PersonDTO

@model IEnumerable<PersonResponse>

@{
    ViewBag.Title = "Persons";
    ViewBag.CurrentUrl = "~/persons/index";
}

<form asp-controller="Persons" asp-action="Index" method="get">

 <!-- breadcrumb starts -->
 <div class="flex">
  <div class="flex-1">
   <div class="text-grey">
    <span>Contacts</span>
    <i class="fa-solid fa-caret-right"></i>
    <span class="text-grey">Persons</span>
   </div>
  </div>

  <div class="flex-1 text-right">
   <a asp-controller="Persons" asp-action="Create" class="button-link button-blue-back">Create Person</a>
  </div>
 </div>
 <!-- breadcrumb ends -->

 <div class="table-container">
     <div class="flex">
         <div class="flex-1">
             <h1>Persons</h1>
         </div>
         <div class="flex-3 text-right">
             <label>Search by:</label>

             @*searchBy dropdown list*@
             @*Ex: searchBy=abc*@
             <select class="search-dropdown" name="searchBy" style="width: 200px">
                 @foreach (KeyValuePair<string, string> column in ViewBag.SelectColumns)
                 {
                     if (column.Key == ViewBag.CurrentSearchBy)
                     {
                         <option value="@column.Key" selected="selected">@column.Value</option>
                     }
                     else
                     {
                         <option value="@column.Key">@column.Value</option>
                     }

                 }
             </select>

             @*searchString input field*@
             @*Ex: searchString=abc*@
             <input type="search" id="Search" class="search-text" placeholder="Search" name="searchString" value="@ViewBag.CurrentSearchString" style="width:200px"/>

             @*search button to submit*@
             @*Ex(when submitted): searchBy=abc&searchString=abc*@
             <button class="search-button">Search</button>

             <a asp-controller="Persons" asp-action="Index" class="ml link-hover">Clear all</a>

         </div>
     </div>
</div>
</form>


<table class="table w-100 mt white-back">
    <thead>
        <tr>
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
                {"ColumnName", nameof(PersonResponse.Name)},
                {"DisplayName", "Person Name"}
            })
            
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
                {"ColumnName", nameof(PersonResponse.Email)},
                {"DisplayName", "Email"}
            })
            
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
                {"ColumnName", nameof(PersonResponse.DateOfBirth)},
                {"DisplayName", "Date of Birth"}
            })
            
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
                {"ColumnName", nameof(PersonResponse.Age)},
                {"DisplayName", "Age"}
            })
            
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
                {"ColumnName", nameof(PersonResponse.Gender)},
                {"DisplayName", "Gender"}
            })
            
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
                {"ColumnName", nameof(PersonResponse.CountryName)},
                {"DisplayName", "Country"}
            })

            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
                {"ColumnName", nameof(PersonResponse.Address)},
                {"DisplayName", "Address"}
            })

            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
            {
                {"ColumnName", nameof(PersonResponse.ReceiveNewsLetters)},
                {"DisplayName", "Receive News Letters"}
            })

            <th>Options</th>
        </tr>
    </thead>
    <tbody>
        @foreach (PersonResponse person in Model)
        {
            <tr>
                <td style="width:13%">@person.Name</td>
                <td style="width:17%">@person.Email</td>
                <td style="width:10%">@person.DateOfBirth?.ToString("yyyy/MM/dd")</td>
                <td style="width:5%">@person.Age</td>
                <td style="width:10%">@person.Gender</td>
                <td style="width:10%">@person.CountryName</td>
                <td style="width:13%">@person.Address</td>
                <td style="width:6%">@person.ReceiveNewsLetters</td>

                <td style="width:10%">  
                    <a asp-controller="Persons" asp-action="Edit" asp-route-ID=@person.ID class="button-link button-blue-back">Edit</a>
                    <a asp-controller="Persons" asp-action="Delete" asp-route-ID=@person.ID class="button-link button-red-back">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
